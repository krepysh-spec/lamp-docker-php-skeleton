version: "3.7"

services:

  nginx:
    image: "nginx:${NGINX_VERSION}"
    container_name: "${DOCKER_PREFIX}-nginx"
    restart: always
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/default.template.conf:/etc/nginx/default.template
      - "./src:${DOCKER_WORK_DIR}"
      - ./logs/nginx/:/var/log/nginx/
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - backend-network

  redis:
    image: "redis:${REDIS_VERSION}"
    restart: always
    container_name: "${DOCKER_PREFIX}-redis"
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend-network

  redis-commander:
    image: "rediscommander/redis-commander:${REDIS_COMMANDER_VERSION}"
    container_name: "${DOCKER_PREFIX}-redis-commander"
    restart: always
    environment:
      - REDIS_HOSTS=local:redis
    ports:
      - "${REDIS_COMMANDER_PORT}:8081" # UI with http://localhost:8081/
    networks:
      - backend-network

  mysql:
    image: "mysql:${MYSQL_VERSION}"
    container_name: "${DOCKER_PREFIX}-mysql"
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./logs/mysql/:/var/log/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend-network

  php:
    container_name: "${DOCKER_PREFIX}-backend"
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - "./src:${DOCKER_WORK_DIR}"
      - "./docker/php/conf.d/php.ini:/usr/local/etc/php/php.ini:ro"
    networks:
      - backend-network

  supervisord:
    container_name: "${DOCKER_PREFIX}-supervisord"
    build:
      context: ./docker/supervisord
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./logs/supervisor/:/var/log/supervisor/
      - "./src:${DOCKER_WORK_DIR}"
    networks:
      - backend-network
    ports:
      - "9001:9001" # UI with http://localhost:9001/

networks:
  backend-network:
    driver: bridge

volumes:
  dbdata:
    driver: local